.container > .navbar,
.textContainer > .navbar {
	/* span all the rows so the nav can be sticky in there;
	   because the rows are implicit -1 doesn't work, so pick a high number */
	grid-row: 1 / 1000000;
}

.container {
	min-width: 300px;
	display: grid;
	/* NAV/MARGIN NAV NAV~LIST-MARGIN CONTENT MARGIN*/
	grid-template-columns: calc(var(--narrow-sidebar-width) / 2) calc(var(--narrow-sidebar-width) / 2) var(--narrow-margin) 1fr var(--narrow-margin);
}

.container > * {
	/* https://css-tricks.com/preventing-a-grid-blowout/ & https://stackoverflow.com/q/28896807/2525313 */
	min-width: 0;
	grid-column: 4 / span 1;
}

.container > .siteHeader {
	grid-column: 2 / span 3;
}

.container > .header {
	grid-column: 2 / span 3;
}

.container > .headerImage {
	grid-column: 1 / span 5;
}

.container > .fullWidth {
	grid-column: 1 / span 5;
}

.container > .wide {
	grid-column: 2 / span 3;
}

.container > .navbar {
	grid-column: 1 / span 2;
}

.textContainer {
	display: grid;
	/* NAV NAV~TEXT-MARGIN QUOTE/CODE-INDENT TEXT MARGIN */
	grid-template-columns: var(--narrow-sidebar-width) var(--medium-margin) var(--narrow-margin) 1fr var(--narrow-margin);
}

.textContainer > * {
	/* https://css-tricks.com/preventing-a-grid-blowout/ & https://stackoverflow.com/q/28896807/2525313 */
	min-width: 0;
	grid-column: 3 / span 2;
}

.textContainer > .wide {
	grid-column: 2 / span 3;
	margin-left: 0.5em;
}

.textContainer > .offWide,
.textContainer > .offCenter,
.textContainer > .sidebar,
.textContainer > :global(.gatsby-highlight) {
	grid-column: 4 / span 1;
}

/* these are the header id links added by `gatsby-remark-autolink-headers` */
.textContainer > h2 > a:first-of-type,
.textContainer > h3 > a:first-of-type,
.textContainer > h4 > a:first-of-type,
.textContainer > h5 > a:first-of-type {
	color: var(--alt-color);
	text-decoration: none;
	float: left;
	margin-left: -24px;
	font-size: 0.5em;
	line-height: 3.5em;
}

.textContainer > h2 > a:first-of-type:visited,
.textContainer > h3 > a:first-of-type:visited,
.textContainer > h4 > a:first-of-type:visited,
.textContainer > h5 > a:first-of-type:visited {
	color: var(--alt-color);
}

.textContainer > h2 > a:first-of-type:hover,
.textContainer > h3 > a:first-of-type:hover,
.textContainer > h4 > a:first-of-type:hover,
.textContainer > h5 > a:first-of-type:hover {
	color: var(--fg-color);
}

/* in text containers, ol/ul are .offCenter, so no need to indent them further */
.textContainer > ul,
.textContainer > ol {
	padding: 0;
	margin: 0.5em 0 0 -0.5em;
}

.textContainer > .navbar {
	grid-column: 1 / span 1;
}

.textContainer > .sidebar {
	text-align: right;
}

/*
 * BREAK: 600
 */

@media all and (min-width: 600px) {
	.textContainer {
		/* lock text to 50+450 or it gets too wide to read;
		   add symmetrical margins to center text;
		   add additional right margin for offCenter/sidebar/etc content*/
		/* NAV NAV~TEXT-MARGIN QUOTE/CODE-INDENT TEXT TEXT-MARGIN MARGIN */
		grid-template-columns: var(--narrow-sidebar-width) minmax(var(--medium-margin), 1fr) minmax(var(--narrow-margin), var(--medium-margin)) 450px 1fr var(--narrow-sidebar-width);
	}

	.textContainer > .offCenter {
		grid-column: 4 / span 1;
	}

	.textContainer > .main {
		grid-column: 2 / span 4;
		margin-left: 0.5em;
	}

	.textContainer > .wide {
		grid-column: 2 / span 4;
	}

	.textContainer > .offWide,
	.textContainer > .sidebar,
	.textContainer > :global(.gatsby-highlight) {
		grid-column: 4 / span 2;
	}
}

/*
 * BREAK: 800
 */

@media all and (min-width: 800px) {
	.container {
		/* lock header text to or it gets too wide to read;
		/* NAV NAV~LIST-MARGIN HEADER-MARGIN CONTENT HEADER-MARGIN MARGIN*/
		grid-template-columns: var(--narrow-sidebar-width) var(--medium-margin) var(--wide-margin) 1fr var(--wide-margin) var(--narrow-sidebar-width);
	}

	.container > * {
		grid-column: 3 / span 3;
	}

	.container > .siteHeader {
		grid-column: 3 / span 3;
	}

	.container > .header {
		grid-column: 4 / span 1;
	}

	.container > .headerImage {
		grid-column: 1 / span 6;
	}

	.container > .fullWidth {
		grid-column: 1 / span 6;
	}

	.container > .wide {
		grid-column: 2 / span 4;
	}

	.container > .navbar {
		grid-column: 1 / span 1;
	}
}

/*
 * BREAK: 1000
 */

@media all and (min-width: 1000px) {
	.container {
		/* move towards 12 column layout;
		   create fixed-width columns on left so nav is fully usable;
		   add same amount of fixed-width columns on right for symmetry (e.g. for header) */
		grid-template-columns: 1fr repeat(3, 100px) repeat(6, 1fr) repeat(3, 100px) 1fr;
	}

	.container > * {
		grid-column: 2 / span 12;
	}

	.container > .siteHeader {
		grid-column: 2 / span 12;
	}

	.container > .header {
		grid-column: 4 / span 8;
	}

	.container > .headerImage {
		grid-column: 3 / span 10;
	}

	.container > .fullWidth {
		grid-column: 1 / span 14;
	}

	.container > .wide {
		grid-column: 5 / span 9;
	}

	.container > .main {
		grid-column: 6 / span 8;
	}

	.container > .navbar {
		grid-column: 2 / span 3;
	}

	.textContainer {
		/* move towards 12 column layout;
		   create fixed-width columns on left so nav is fully usable and same size as in .container;
		   add same amount of fixed-width columns on right for symmetry (e.g. for header);
		   give content columns more weight (2fr) to make content a bit wider */
		grid-template-columns: 1fr repeat(3, 100px) repeat(9, 2fr) 1fr;
	}

	.textContainer > * {
		grid-column: 6 / span 5;
	}

	.textContainer > .main {
		grid-column: 6 / span 8;
		margin-left: 0;
	}

	.textContainer > .wide {
		grid-column: 5 / span 9;
	}

	.textContainer > .offWide,
	.textContainer > :global(.gatsby-highlight) {
		grid-column: 7 / span 7;
	}

	.textContainer > .offCenter {
		grid-column: 7 / span 4;
	}

	.textContainer > .sidebar {
		grid-column: 12 / span 2;
		height: 0;
	}

	.textContainer > .navbar {
		grid-column: 2 / span 3;
	}
}

/*
 * BREAK: 1400
 */

@media all and (min-width: 1400px) {
	.container,
	.textContainer {
		grid-template-columns: 1fr repeat(12, 100px) 1fr;
	}
}
